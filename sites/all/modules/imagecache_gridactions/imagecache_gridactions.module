<?php
// $Id: 

/**
 * @file A collection of grid manipulations for imagecache -
 *
 * Based on first draft of the code by Dimm (imagecache.module 5--1)
 * http://drupal.org/node/184816
 * And Imagecache actions API (imagecache.module 5--2) by
 * dman http://coders.co.nz/
 * 
 * By canarymason http://www.canarypromo.com
 *
 *
 * Notes about imagecache action extensions. For each action:
 *
 * 1: Impliment imagecache_HOOK_form($formdata) to define the config form.
 *
 * 1a: Impliment theme_imagecache_HOOK_form if needed - optional
 *
 * 2: Impliment imagecache_HOOK_image(&$image, $data) to DO the process
 *
 * 3: Impliment theme_imagecache_HOOK($element) to return a text description of
 * the setting
 *
 * 4: Declare the action in HOOK_imagecache_actions()
 *
 *
 * API ref for hook_image()
 *
 * @param $image array defining an image file, including  :
 *
 *   $image- >source as the filename,
 *
 *   $image->info array
 *
 *   $image->res handle on the image object
 *
 * @param $action array of settings as defined in your form.
 *
 */

// During devel, caching is pointless. Flush it
// imagecache_action_definitions(TRUE);

/**
* Implementation of hook_imagecache_actions().
*
* Declare available actions, return help text about this filter.
*
* These funcs are all in their respective include libraries - as configured below
*/
function imagecache_gridactions_imagecache_actions() {

  $actions = array(
    'gridactions_snap' => array(
      'name' => t('Snap-to-Grid'),
      'description' => t('Size the image to the nearest multiple of some value.'),
      'file' => 'gridactions.inc',
    ),
    'gridactions_remove' => array(
      'name' => t('Trim'),
      'description' => t('Trim the image by some value.'),
      'file' => 'gridactions.inc',
    ),
  );

  return $actions;
}





/**
 * Need to flush the cache when this module is enabled
 */
function imagecache_gridactions_install() {
  imagecache_action_definitions(TRUE);
  cache_clear_all('imagecache_gridactions', 'cache');
  drupal_set_message(t('Additional imagecache actions should now be available in the presets !settings_link', array('!settings_link' => l(t('settings'), 'admin/build/imagecache'))));
}




